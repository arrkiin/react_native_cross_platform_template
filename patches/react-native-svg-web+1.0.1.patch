patch-package
--- a/node_modules/react-native-svg-web/index.js
+++ b/node_modules/react-native-svg-web/index.js
@@ -26,43 +26,59 @@
 const React = require('react');
 const PropTypes = require('prop-types');
 
-function createElement(name, type) {
-  function CreateElement(props) {
-    return React.createElement(type, props, props.children);
-  }
-
-  CreateElement.displayName = name;
-
-  CreateElement.propTypes = {
-    children: PropTypes.node
+function createClass(name, type) {
+  return class extends React.Component {
+    static displayName = name;
+    static propTypes = {
+      children: PropTypes.node,
+    };
+    static defaultProps = {
+      children: undefined,
+    };
+    setNativeProps = nativeProps => {
+      this.setState(prevState => {
+        return {
+          ...prevState,
+          nativeProps: nativeProps,
+        };
+      });
+    };
+    constructor(props) {
+      super(props);
+      this.state = {};
+    }
+    render() {
+      let childProps = this.props;
+      if (this.state.nativeProps) {
+        childProps = {
+          ...childProps,
+          ...this.state.nativeProps,
+        };
+      }
+      return React.createElement(type, childProps, this.props.children);
+    }
   };
-
-  CreateElement.defaultProps = {
-    children: undefined
-  };
-
-  return CreateElement;
 }
 
-const Svg = module.exports = createElement('Svg', 'svg');
+const Svg = (module.exports = createClass('Svg', 'svg'));
 
-Svg.Circle = createElement('Circle', 'circle');
-Svg.ClipPath = createElement('ClipPath', 'clipPath');
-Svg.Defs = createElement('Defs', 'defs');
-Svg.Ellipse = createElement('Ellipse', 'ellipse');
-Svg.G = createElement('G', 'g');
-Svg.Image = createElement('Image', 'image');
-Svg.Line = createElement('Line', 'line');
-Svg.LinearGradient = createElement('LinearGradient', 'linearGradient');
-Svg.Path = createElement('Path', 'path');
-Svg.Polygon = createElement('Polygon', 'polygon');
-Svg.Polyline = createElement('Polyline', 'polyline');
-Svg.RadialGradient = createElement('RadialGradient', 'radialGradient');
-Svg.Rect = createElement('Rect', 'rect');
-Svg.Stop = createElement('Stop', 'stop');
-Svg.Svg = createElement('Svg', 'svg');
-Svg.Symbol = createElement('Symbol', 'symbol');
-Svg.Text = createElement('Text', 'text');
-Svg.TextPath = createElement('TextPath', 'textPath');
-Svg.TSpan = createElement('TSpan', 'tspan');
-Svg.Use = createElement('Use', 'use');
\ No newline at end of file
+Svg.Circle = createClass('Circle', 'circle');
+Svg.ClipPath = createClass('ClipPath', 'clipPath');
+Svg.Defs = createClass('Defs', 'defs');
+Svg.Ellipse = createClass('Ellipse', 'ellipse');
+Svg.G = createClass('G', 'g');
+Svg.Image = createClass('Image', 'image');
+Svg.Line = createClass('Line', 'line');
+Svg.LinearGradient = createClass('LinearGradient', 'linearGradient');
+Svg.Path = createClass('Path', 'path');
+Svg.Polygon = createClass('Polygon', 'polygon');
+Svg.Polyline = createClass('Polyline', 'polyline');
+Svg.RadialGradient = createClass('RadialGradient', 'radialGradient');
+Svg.Rect = createClass('Rect', 'rect');
+Svg.Stop = createClass('Stop', 'stop');
+Svg.Svg = createClass('Svg', 'svg');
+Svg.Symbol = createClass('Symbol', 'symbol');
+Svg.Text = createClass('Text', 'text');
+Svg.TextPath = createClass('TextPath', 'textPath');
+Svg.TSpan = createClass('TSpan', 'tspan');
+Svg.Use = createClass('Use', 'use');
\ No newline at end of file
